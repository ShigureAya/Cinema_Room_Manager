type: edu
custom_name: Sold!
files:
- name: src/cinema/Cinema.java
  visible: true
  text: |
    package cinema;

    import java.util.Scanner;

    public class Cinema {

        public static void main(String[] args) {

            Scanner scanner = new Scanner(System.in);

            System.out.println("Enter the number of rows:");
            int y = scanner.nextInt();
            System.out.println("Enter the number of seats in each row:");
            int x = scanner.nextInt();
            System.out.println("Total income:");
            int total;
            final int seatNumber = y * x;
            if (seatNumber <= 60) {
                total = seatNumber * 10;
            } else {
                int front = y / 2;
                total = front * x * 10;
                total += (y - front) * x * 8;
            }
            System.out.printf("$%d", total);
    //        String[][] seat = new String[y][x];
    //        for (String[] strings : seat) {
    //            Arrays.fill(strings, "S");
    //        }
    //
    //        displaySeat(seat);

        }

        private static void displaySeat(String[][] seat) {
            System.out.println("Cinema:");
            System.out.print(" ");
            for (int i = 1; i <= seat[0].length; i++) {

                System.out.print(" " + i);
            }
            System.out.println();

            for (int i = 0; i < seat.length; i++) {
                System.out.println((i + 1) + " " + String.join(" ", seat[i]));
            }
        }
    }
  learner_created: false
- name: test/CinemaTests.java
  visible: false
  text: |
    import cinema.Cinema;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    public class CinemaTests extends StageTest<String> {

        @DynamicTestingMethod
        CheckResult test1_testOutput() {

            TestedProgram program = new TestedProgram(Cinema.class);
            String output = program.start();

            if (!output.toLowerCase().contains("enter the number of rows")) {
                return CheckResult.wrong("At the beginning your program should ask for entering the number of rows.\n" +
                    "Your output should contain 'Enter the number of rows:'");
            }

            output = program.execute("4");

            if (!output.toLowerCase().contains("enter the number of seats in each row")) {
                return CheckResult.wrong("After entering the number of rows your program should ask for entering" +
                    " the number of seats in each row.\n" +
                    "Your output should contain 'Enter the number of seats in each row'");
            }

            output = program.execute("5");

            if (!output.toLowerCase().contains("total income:")) {
                return CheckResult.wrong("After entering the number of seats in each row your program should print total income.\n" +
                    "Your output should contain 'Total income:'");
            }

            if (!output.contains("$200")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $200");
            }

            return CheckResult.correct();
        }

        @DynamicTestingMethod
        CheckResult test2_testIncomeCalculating() {

            TestedProgram program = new TestedProgram(Cinema.class);
            program.start();

            String output = program.execute("8\n9");

            if (!output.contains("$648")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $648");
            }

            program.stop();

            program = new TestedProgram(Cinema.class);
            program.start();

            output = program.execute("9\n7");

            if (!output.contains("$560")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $560");
            }

            program.stop();

            program = new TestedProgram(Cinema.class);
            program.start();

            output = program.execute("7\n9");

            if (!output.contains("$558")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $558");
            }

            program.stop();

            program = new TestedProgram(Cinema.class);
            program.start();

            output = program.execute("1\n1");

            if (!output.contains("$10")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $10");
            }

            program.stop();

            program = new TestedProgram(Cinema.class);
            program.start();

            output = program.execute("3\n3");

            if (!output.contains("$90")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $90");
            }

            program.stop();

            program = new TestedProgram(Cinema.class);
            program.start();

            output = program.execute("8\n8");

            if (!output.contains("$576")) {
                return CheckResult.wrong("You miscalculated the income.\nCorrect one is $576");
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/133/stages/710/implement#comment
status: Solved
record: 1
